;; Axel Magnuson Emacs Init File
;;

;; This is very much a WIP for the time being.  I am still figuring
;; out emacs.

(setq inhibit-startup-message t) ; hide splash page

(scroll-bar-mode -1) ; disable visible scrollbar
(tool-bar-mode -1) ; disable the toolbar
; (tooltip-mode -1) ; disable tooltips
; TODO: enable when ready
; (menu-bar-mode -1) ; disable menu bar

(set-fringe-mode 10) ; breathing room
(setq visible-bell t) ; enable visible bell
(set-face-attribute 'default nil :font "Fira Code Retina" :height (+ 128 16)) ; fira code font

;; line numbering
(column-number-mode)
(setq display-line-numbers-type 'relative)
(global-display-line-numbers-mode t)

;; DISABLE line numbers for some interactive modes
(dolist (mode '(term-mode-hook
		shell-mode-hook
		eshell-mode-hook))
  (add-hook mode (lambda () (display-line-numbers-mode 0))))


;; Init package sources
(require 'package)
;; TODO: use proxies
;; (add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
(setq package-archives '(("melpa" . "https://melpa.org/packages/")
			 ("org" . "https://orgmode.org/elpa/")
			 ("elpa" . "https://elpa.gnu.org/packages/")))
(package-initialize)
(unless package-archive-contents (package-refresh-contents))

;; Init use-package on non-linux platforms
(unless (package-installed-p 'use-package)
  (package-install 'use-package))

;; Init use-package
(require 'use-package)
(setq use-package-always-ensure t) ; always install packages

;; convenient key bindings
(use-package general
  :config
  ;; leader key
  (general-create-definer axelmagn/leader-keys
			  :keymaps '(normal insert visual emacs)
			  :prefix "SPC"
			  :global-prefix "C-SPC")
  (axelmagn/leader-keys
   "`"  'shell
   "f"  '(:ignore t :which-key "files")
   "fi" '(lambda()(interactive)(find-file user-init-file) :which-key "user-init-file")
   "ff" 'counsel-find-file
   "b"  '(:ignore t :which-key "buffers")
   "bl" 'list-buffers
   "bk" 'kill-buffer
   "hf" 'counsel-describe-function
   "hv" 'counsel-describe-variable
   "s"  '(:ignore t :which-key "settings")
   "st" 'counsel-load-theme
   ))

(use-package ivy
  :config
  (ivy-mode)
  (setq ivy-use-virtual-buffers t)
  (setq enable-recursive-minibuffers t))
(use-package counsel)
(use-package swiper)
  

;; Theming
(use-package doom-themes
  :config
  (load-theme 'doom-acario-dark t))

(use-package monokai-theme
					; (load-theme 'monokai t)
  )

;; Preview key bindings
;; https://github.com/justbur/emacs-which-key
(use-package which-key
  :custom
  (which-key-idle-delay 0.1) ; show preview *almost* immediately
  :config (which-key-mode)) ; enable which-key on start

;; VIM modal editing
;; https://github.com/emacs-evil
(use-package evil
  :config
  (evil-mode 1)
  ) ; enable evil on start

(use-package undo-tree
  :config
  (undo-tree-mode 1)
  (setq evil-undo-system "undo-tree"))

;; prettier modeline
(use-package compat) ; necessary for doom-modeline
(use-package doom-modeline
  :config (doom-modeline 1))

;; clearly marked matching parens
(use-package rainbow-delimiters
  :hook (prog-mode . rainbow-delimiters-mode))

;; language server
(use-package lsp-mode
  :init
  ;; set prefix for lsp-command-keymap (few alternatives - "C-l", "C-c l")
  (setq lsp-keymap-prefix "SPC l")
  :hook (
	 ;; replace XXX-mode with concrete major-mode(e. g. python-mode)
         ; (python-mode . lsp)
         ;; if you want which-key integration
         (lsp-mode . lsp-enable-which-key-integration))
  :commands lsp)

;; language-server ui
(use-package lsp-ui
  :commands lsp-ui-mode)

(use-package lsp-python-ms
  :init (setq lsp-python-ms-auto-install-server t)
  :hook (python-mode . (lambda ()
                          (require 'lsp-python-ms)
                          (lsp))))  ; or lsp-deferred

(use-package rustic
  ;; (:bind (:map rustic-mode-map ...))
  :config
  ;; rustfmt on save
  (setq rustic-format-on-save t)
  :hook (rustic-mode . lsp-mode))

;; configure terminal depending on what is present.
;; use powershell
(let ((windows-shell-file (executable-find "powershell")))
  (when windows-shell-file
    (use-package powershell)
    (axelmagn/leader-keys
      "`" 'powershell)))




;; Autogenerated custom variables
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages
   '(monokai-theme monokai rustic powershell counsel ivy lsp-python-ms lsp-ui lsp-mode doom-modeline compat general doom-themes evil which-key)))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
;; optionally
